<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
 	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!-- //最大连接数, 默认30个 -->
        <property name="maxTotal" value="30"/>
        <!-- //最大空闲连接数, 默认5个 -->
        <property name="maxIdle" value="5"/>
        <!-- //在获取连接的时候检查有效性, 默认true -->
        <property name="testOnBorrow" value="true"/>
        <!-- //在空闲时检查有效性, 默认false -->
        <property name="testWhileIdle" value="false"/>
        <!-- //逐出连接的最小空闲时间 默认60000毫秒(1分钟) -->
        <property name="minEvictableIdleTimeMillis" value="60000"/>
        <!-- //对象空闲多久后逐出, 当空闲时间>该值 且 空闲连接>最大空闲数 时直接逐出,不再根据MinEvictableIdleTimeMillis判断  (默认逐出策略)    -->
        <property name="softMinEvictableIdleTimeMillis" value="1800000"/>
        <!-- 最小空闲连接数, 默认0 -->
        <property name="minIdle" value="0"/>
        <!-- //逐出扫描的时间间隔(毫秒) 如果为负数,则不运行逐出线程, 默认30000 -->
        <property name="timeBetweenEvictionRunsMillis" value="30000"/>
        <!-- //每次逐出检查时 逐出的最大数目 如果为负数就是 : 1/abs(n), 默认3 -->
        <property name="numTestsPerEvictionRun" value="3"/>
        <!-- //连接耗尽时是否阻塞, false报异常,ture阻塞直到超时, 默认true -->
        <property name="blockWhenExhausted" value="true"/>
        <!-- //获取连接时的最大等待毫秒数(如果设置为阻塞时BlockWhenExhausted),如果超时就抛异常, 小于零:阻塞不确定的时间,  默认-1 -->
        <property name="maxWaitMillis" value="-1"/>
        <!-- //是否启用后进先出, 默认true -->
        <property name="lifo" value="true"/>
    </bean>

    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.server.host}"/>
        <property name="port" value="${redis.server.port}"/>
        <property name="poolConfig" ref="jedisPoolConfig"/>
        <property name="database" value="0"/>
        <property name="timeout" value="2000"/>
    </bean>

    <bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer" />

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
          p:connection-factory-ref="jedisConnectionFactory" p:keySerializer-ref="stringRedisSerializer"
          p:hashKeySerializer-ref="stringRedisSerializer">
        <property name="defaultSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
        </property>
    </bean>

    <bean id="jedisPool" class="redis.clients.jedis.JedisPool">
        <constructor-arg name="poolConfig" ref="jedisPoolConfig"/>
        <constructor-arg name="host" value="${redis.server.host}"/>
        <constructor-arg name="port" value="${redis.server.port}"/>
    </bean>
	
</beans>